"""
Automated Birthday Email Sender

This script reads birthdays from a CSV file, checks if today matches
any birthdays, and sends a personalized birthday email using random
letter templates via SMTP. It automates wishing friends and family on
their special day.

Key features:
- Reads birthday data using pandas
- Checks today's date with datetime
- Selects random letter templates and personalizes them
- Sends emails securely with smtplib
"""

import datetime
import pandas
import random
import smtplib

# Your email credentials
MY_EMAIL = "your_email@example.com"
MY_PASSWORD = "your_password"

# Get today's month and day as a tuple
today = datetime.datetime.now()
today_tuple = (today.month, today.day)

# Read birthdays CSV into a DataFrame
data = pandas.read_csv("birthdays.csv")

# Create a dictionary with keys as (month, day) tuples and values as the row
birthday_dict = {(row.month, row.day): row for (index, row) in data.iterrows()}

# Check if today is someone's birthday
if today_tuple in birthday_dict:
    birthday_person = birthday_dict[today_tuple]
    
    # Select a random letter template
    letter_path = f"letter_templates/letter_{random.randint(1,3)}.txt"
    with open(letter_path) as letter_file:
        contents = letter_file.read()
    
    # Personalize the letter by replacing placeholder with the person's name
    contents = contents.replace("[NAME]", birthday_person["name"])
    
    # Send the email
    with smtplib.SMTP("smtp.gmail.com") as connection:
        connection.starttls()
        connection.login(MY_EMAIL, MY_PASSWORD)
        connection.sendmail(
            from_addr=MY_EMAIL,
            to_addrs=birthday_person["email"],
            msg=f"Subject:Happy Birthday!\n\n{contents}"
        )
    print(f"Sent birthday email to {birthday_person['name']}")
else:
    print("No birthdays today.")
