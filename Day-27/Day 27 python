"""
Miles to Kilometers Converter - Day 27 Project
----------------------------------------------
This project is a simple GUI application built with Python's Tkinter module.
It allows the user to enter a distance in miles and instantly convert it to kilometers
by clicking a 'Calculate' button.

Features:
- Graphical User Interface using Tkinter.
- Uses labels, an entry widget, and a button.
- Layout managed with the grid() method and padding for spacing.
- Basic unit conversion formula (1 mile = 1.609 km).
- Error handling for invalid inputs.

This project demonstrates:
- How to create a Tkinter window.
- How to position widgets using grid().
- How to respond to button clicks with functions.
- Passing and retrieving data from entry fields.
"""

from tkinter import *

# ---------------------------- MILES TO KM CONVERTER ---------------------------- #
def miles_to_km():
    """Convert miles from entry to kilometers and update label."""
    try:
        miles = float(miles_input.get())
        km = miles * 1.609
        km_result_label.config(text=f"{km:.2f}")
    except ValueError:
        km_result_label.config(text="Invalid")

# Create main window
window = Tk()
window.title("Miles to Km Converter")
window.config(padx=20, pady=20)

# Entry for miles
miles_input = Entry(width=7)
miles_input.grid(column=1, row=0)

# Miles label
miles_label = Label(text="Miles")
miles_label.grid(column=2, row=0)

# Equal label
equal_label = Label(text="is equal to")
equal_label.grid(column=0, row=1)

# Result label (kilometers)
km_result_label = Label(text="0")
km_result_label.grid(column=1, row=1)

# Km label
km_label = Label(text="Km")
km_label.grid(column=2, row=1)

# Calculate button
calculate_button = Button(text="Calculate", command=miles_to_km)
calculate_button.grid(column=1, row=2)

# Keep window open
window.mainloop()
